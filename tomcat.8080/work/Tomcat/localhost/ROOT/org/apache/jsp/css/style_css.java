/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.16
 * Generated at: 2025-02-27 06:33:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.css;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class style_css extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("body {\n");
      out.write("  font-family: Arial, sans-serif;\n");
      out.write("  margin: 50px auto;\n");
      out.write("  padding: 0;\n");
      out.write("  background: linear-gradient(to bottom, #fde2e4, #fff1f2);\n");
      out.write("  text-align: center;\n");
      out.write("  min-height: 100vh;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".container {\n");
      out.write("  width: 40%;\n");
      out.write("  margin: 80px auto;\n");
      out.write("  padding: 20px;\n");
      out.write("  background: white;\n");
      out.write("  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n");
      out.write("  border-radius: 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("h1 {\n");
      out.write("  font-size: 150px;\n");
      out.write("  margin: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("h2 {\n");
      out.write("  color: #333;\n");
      out.write("}\n");
      out.write("\n");
      out.write("form textarea {\n");
      out.write("  width: 90%;\n");
      out.write("  min-height: 50px;\n");
      out.write("  padding: 15px;\n");
      out.write("  margin: 12px 0;\n");
      out.write("  border: 2px solid #ccc;\n");
      out.write("  border-radius: 8px;\n");
      out.write("  font-size: 18px;\n");
      out.write("  outline: none;\n");
      out.write("  resize: none;\n");
      out.write("  overflow: hidden;\n");
      out.write("  transition: border 0.3s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("form textarea:focus {\n");
      out.write("  border-color: #007bff;\n");
      out.write("}\n");
      out.write("\n");
      out.write("form input[type='text'],\n");
      out.write("form input[type='email'],\n");
      out.write("form input[type='password'] {\n");
      out.write("  width: 90%;\n");
      out.write("  max-width: 300px;\n");
      out.write("  padding: 12px;\n");
      out.write("  margin: 10px 0;\n");
      out.write("  border: 2px solid #ccc;\n");
      out.write("  border-radius: 8px;\n");
      out.write("  font-size: 16px;\n");
      out.write("  outline: none;\n");
      out.write("  transition: border 0.3s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button {\n");
      out.write("  display: block;\n");
      out.write("  width: 100%;\n");
      out.write("  max-width: 200px;\n");
      out.write("  margin: 20px auto;\n");
      out.write("  padding: 12px;\n");
      out.write("  border: none;\n");
      out.write("  background: #ff3366;\n");
      out.write("  color: white;\n");
      out.write("  font-size: 18px;\n");
      out.write("  font-weight: bold;\n");
      out.write("  border-radius: 8px;\n");
      out.write("  cursor: pointer;\n");
      out.write("  transition: background 0.3s, transform 0.1s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:hover {\n");
      out.write("  background: #fde2e4;\n");
      out.write("  transform: scale(1.05);\n");
      out.write("}\n");
      out.write("\n");
      out.write("button:active {\n");
      out.write("  transform: scale(1);\n");
      out.write("}\n");
      out.write("\n");
      out.write("ul {\n");
      out.write("  list-style: none;\n");
      out.write("  padding: 0;\n");
      out.write("  margin-top: 20px;\n");
      out.write("  display: flex;\n");
      out.write("  flex-direction: column;\n");
      out.write("  align-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("ul li {\n");
      out.write("  width: 50%;\n");
      out.write("  background: rgba(255, 255, 255, 0.8);\n");
      out.write("  color: #333; /* ê¸ìì ë³ê²½ */\n");
      out.write("  padding: 16px 20px;\n");
      out.write("  margin: 8px 0;\n");
      out.write("  border-radius: 10px;\n");
      out.write("  font-size: 18px;\n");
      out.write("  font-weight: bold;\n");
      out.write("  text-align: center;\n");
      out.write("  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n");
      out.write("  transition: transform 0.2s, background 0.3s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("ul li:hover {\n");
      out.write("  background: rgba(255, 255, 255, 1);\n");
      out.write("  transform: scale(1.05);\n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("  display: inline-block;\n");
      out.write("  margin-top: 20px;\n");
      out.write("  color: #ff3366;\n");
      out.write("  text-decoration: none;\n");
      out.write("  font-size: 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a:hover {\n");
      out.write("  text-decoration: underline;\n");
      out.write("}\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
